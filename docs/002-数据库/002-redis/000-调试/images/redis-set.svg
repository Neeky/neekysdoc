<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#e0e0ff" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="790.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >redis-set</text>
<text id="details" x="10.00" y="773" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="773" > </text>
<g id="frames">
<g >
<title>net_rx_action (31 samples, 32.29%)</title><rect x="182.1" y="261" width="381.0" height="15.0" fill="rgb(130,130,236)" rx="2" ry="2" />
<text  x="185.08" y="271.5" >net_rx_action</text>
</g>
<g >
<title>ACLCheckAllUserCommandPerm (2 samples, 2.08%)</title><rect x="759.8" y="533" width="24.6" height="15.0" fill="rgb(115,115,222)" rx="2" ry="2" />
<text  x="762.79" y="543.5" >A..</text>
</g>
<g >
<title>ip_local_deliver_finish (30 samples, 31.25%)</title><rect x="182.1" y="197" width="368.7" height="15.0" fill="rgb(112,112,220)" rx="2" ry="2" />
<text  x="185.08" y="207.5" >ip_local_deliver_finish</text>
</g>
<g >
<title>__softirqentry_text_start (31 samples, 32.29%)</title><rect x="182.1" y="277" width="381.0" height="15.0" fill="rgb(123,123,229)" rx="2" ry="2" />
<text  x="185.08" y="287.5" >__softirqentry_text_start</text>
</g>
<g >
<title>__rseq_handle_notify_resume (3 samples, 3.12%)</title><rect x="1104.0" y="549" width="36.8" height="15.0" fill="rgb(127,127,233)" rx="2" ry="2" />
<text  x="1106.96" y="559.5" >__r..</text>
</g>
<g >
<title>do_syscall_64 (12 samples, 12.50%)</title><rect x="993.3" y="613" width="147.5" height="15.0" fill="rgb(93,93,202)" rx="2" ry="2" />
<text  x="996.33" y="623.5" >do_syscall_64</text>
</g>
<g >
<title>createStringObject (4 samples, 4.17%)</title><rect x="870.4" y="565" width="49.2" height="15.0" fill="rgb(87,87,196)" rx="2" ry="2" />
<text  x="873.42" y="575.5" >crea..</text>
</g>
<g >
<title>sock_read_iter (3 samples, 3.12%)</title><rect x="636.9" y="485" width="36.9" height="15.0" fill="rgb(102,102,210)" rx="2" ry="2" />
<text  x="639.88" y="495.5" >soc..</text>
</g>
<g >
<title>pvclock_clocksource_read (1 samples, 1.04%)</title><rect x="538.5" y="133" width="12.3" height="15.0" fill="rgb(111,111,218)" rx="2" ry="2" />
<text  x="541.54" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 12.50%)</title><rect x="993.3" y="629" width="147.5" height="15.0" fill="rgb(104,104,212)" rx="2" ry="2" />
<text  x="996.33" y="639.5" >entry_SYSCALL_64_a..</text>
</g>
<g >
<title>kvm_clock_get_cycles (1 samples, 1.04%)</title><rect x="1091.7" y="565" width="12.3" height="15.0" fill="rgb(92,92,201)" rx="2" ry="2" />
<text  x="1094.67" y="575.5" ></text>
</g>
<g >
<title>je_malloc_usable_size (2 samples, 2.08%)</title><rect x="895.0" y="501" width="24.6" height="15.0" fill="rgb(112,112,220)" rx="2" ry="2" />
<text  x="898.00" y="511.5" >j..</text>
</g>
<g >
<title>sock_def_readable (27 samples, 28.12%)</title><rect x="182.1" y="117" width="331.9" height="15.0" fill="rgb(102,102,210)" rx="2" ry="2" />
<text  x="185.08" y="127.5" >sock_def_readable</text>
</g>
<g >
<title>ksys_read (3 samples, 3.12%)</title><rect x="636.9" y="533" width="36.9" height="15.0" fill="rgb(117,117,224)" rx="2" ry="2" />
<text  x="639.88" y="543.5" >ksy..</text>
</g>
<g >
<title>ep_send_events (3 samples, 3.12%)</title><rect x="1017.9" y="549" width="36.9" height="15.0" fill="rgb(127,127,233)" rx="2" ry="2" />
<text  x="1020.92" y="559.5" >ep_..</text>
</g>
<g >
<title>__alloc_skb (1 samples, 1.04%)</title><rect x="600.0" y="373" width="12.3" height="15.0" fill="rgb(113,113,221)" rx="2" ry="2" />
<text  x="603.00" y="383.5" ></text>
</g>
<g >
<title>redis-server (96 samples, 100.00%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(114,114,221)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >redis-server</text>
</g>
<g >
<title>epoll_wait (12 samples, 12.50%)</title><rect x="993.3" y="645" width="147.5" height="15.0" fill="rgb(120,120,226)" rx="2" ry="2" />
<text  x="996.33" y="655.5" >epoll_wait</text>
</g>
<g >
<title>inet_recvmsg (3 samples, 3.12%)</title><rect x="636.9" y="469" width="36.9" height="15.0" fill="rgb(89,89,198)" rx="2" ry="2" />
<text  x="639.88" y="479.5" >ine..</text>
</g>
<g >
<title>je_malloc_usable_size (2 samples, 2.08%)</title><rect x="722.9" y="501" width="24.6" height="15.0" fill="rgb(112,112,220)" rx="2" ry="2" />
<text  x="725.92" y="511.5" >j..</text>
</g>
<g >
<title>new_sync_read (3 samples, 3.12%)</title><rect x="636.9" y="501" width="36.9" height="15.0" fill="rgb(103,103,211)" rx="2" ry="2" />
<text  x="639.88" y="511.5" >new..</text>
</g>
<g >
<title>beforeSleep (45 samples, 46.88%)</title><rect x="71.5" y="645" width="553.1" height="15.0" fill="rgb(135,135,240)" rx="2" ry="2" />
<text  x="74.46" y="655.5" >beforeSleep</text>
</g>
<g >
<title>rseq_get_rseq_cs.isra.0 (2 samples, 2.08%)</title><rect x="1104.0" y="517" width="24.5" height="15.0" fill="rgb(94,94,203)" rx="2" ry="2" />
<text  x="1106.96" y="527.5" >r..</text>
</g>
<g >
<title>setKey (1 samples, 1.04%)</title><rect x="809.0" y="501" width="12.2" height="15.0" fill="rgb(134,134,239)" rx="2" ry="2" />
<text  x="811.96" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (9 samples, 9.38%)</title><rect x="993.3" y="597" width="110.7" height="15.0" fill="rgb(89,89,198)" rx="2" ry="2" />
<text  x="996.33" y="607.5" >__x64_sys_epo..</text>
</g>
<g >
<title>tcp_rcv_established (29 samples, 30.21%)</title><rect x="182.1" y="133" width="356.4" height="15.0" fill="rgb(132,132,237)" rx="2" ry="2" />
<text  x="185.08" y="143.5" >tcp_rcv_established</text>
</g>
<g >
<title>lookupCommand (2 samples, 2.08%)</title><rect x="833.5" y="549" width="24.6" height="15.0" fill="rgb(97,97,206)" rx="2" ry="2" />
<text  x="836.54" y="559.5" >l..</text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 1.04%)</title><rect x="587.7" y="325" width="12.3" height="15.0" fill="rgb(87,87,196)" rx="2" ry="2" />
<text  x="590.71" y="335.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 1.04%)</title><rect x="563.1" y="341" width="12.3" height="15.0" fill="rgb(119,119,226)" rx="2" ry="2" />
<text  x="566.12" y="351.5" ></text>
</g>
<g >
<title>connSocketRead (1 samples, 1.04%)</title><rect x="673.8" y="581" width="12.2" height="15.0" fill="rgb(128,128,234)" rx="2" ry="2" />
<text  x="676.75" y="591.5" ></text>
</g>
<g >
<title>__napi_poll (31 samples, 32.29%)</title><rect x="182.1" y="245" width="381.0" height="15.0" fill="rgb(138,138,243)" rx="2" ry="2" />
<text  x="185.08" y="255.5" >__napi_poll</text>
</g>
<g >
<title>call (4 samples, 4.17%)</title><rect x="784.4" y="549" width="49.1" height="15.0" fill="rgb(136,136,241)" rx="2" ry="2" />
<text  x="787.38" y="559.5" >call</text>
</g>
<g >
<title>ACLSelectorCheckCmd (1 samples, 1.04%)</title><rect x="772.1" y="517" width="12.3" height="15.0" fill="rgb(95,95,204)" rx="2" ry="2" />
<text  x="775.08" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 1.04%)</title><rect x="1153.1" y="421" width="12.3" height="15.0" fill="rgb(115,115,222)" rx="2" ry="2" />
<text  x="1156.12" y="431.5" ></text>
</g>
<g >
<title>decrRefCount (1 samples, 1.04%)</title><rect x="809.0" y="453" width="12.2" height="15.0" fill="rgb(112,112,220)" rx="2" ry="2" />
<text  x="811.96" y="463.5" ></text>
</g>
<g >
<title>sock_sendmsg (38 samples, 39.58%)</title><rect x="145.2" y="437" width="467.1" height="15.0" fill="rgb(135,135,241)" rx="2" ry="2" />
<text  x="148.21" y="447.5" >sock_sendmsg</text>
</g>
<g >
<title>pvclock_clocksource_read (1 samples, 1.04%)</title><rect x="538.5" y="149" width="12.3" height="15.0" fill="rgb(111,111,218)" rx="2" ry="2" />
<text  x="541.54" y="159.5" ></text>
</g>
<g >
<title>connRead (4 samples, 4.17%)</title><rect x="636.9" y="597" width="49.1" height="15.0" fill="rgb(111,111,218)" rx="2" ry="2" />
<text  x="639.88" y="607.5" >conn..</text>
</g>
<g >
<title>je_malloc_usable_size (1 samples, 1.04%)</title><rect x="931.9" y="533" width="12.3" height="15.0" fill="rgb(112,112,220)" rx="2" ry="2" />
<text  x="934.88" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 1.04%)</title><rect x="1153.1" y="549" width="12.3" height="15.0" fill="rgb(93,93,202)" rx="2" ry="2" />
<text  x="1156.12" y="559.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 1.04%)</title><rect x="1153.1" y="501" width="12.3" height="15.0" fill="rgb(97,97,206)" rx="2" ry="2" />
<text  x="1156.12" y="511.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 1.04%)</title><rect x="514.0" y="101" width="12.2" height="15.0" fill="rgb(117,117,224)" rx="2" ry="2" />
<text  x="516.96" y="111.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 1.04%)</title><rect x="1005.6" y="565" width="12.3" height="15.0" fill="rgb(95,95,204)" rx="2" ry="2" />
<text  x="1008.62" y="575.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (30 samples, 31.25%)</title><rect x="182.1" y="213" width="368.7" height="15.0" fill="rgb(100,100,208)" rx="2" ry="2" />
<text  x="185.08" y="223.5" >__netif_receive_skb_one_core</text>
</g>
<g >
<title>ksys_read (1 samples, 1.04%)</title><rect x="1153.1" y="533" width="12.3" height="15.0" fill="rgb(117,117,224)" rx="2" ry="2" />
<text  x="1156.12" y="543.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 1.04%)</title><rect x="145.2" y="405" width="12.3" height="15.0" fill="rgb(139,139,244)" rx="2" ry="2" />
<text  x="148.21" y="415.5" ></text>
</g>
<g >
<title>__write (41 samples, 42.71%)</title><rect x="120.6" y="549" width="504.0" height="15.0" fill="rgb(135,135,240)" rx="2" ry="2" />
<text  x="123.62" y="559.5" >__write</text>
</g>
<g >
<title>__schedule (1 samples, 1.04%)</title><rect x="1054.8" y="517" width="12.3" height="15.0" fill="rgb(114,114,221)" rx="2" ry="2" />
<text  x="1057.79" y="527.5" ></text>
</g>
<g >
<title>main (96 samples, 100.00%)</title><rect x="10.0" y="693" width="1180.0" height="15.0" fill="rgb(126,126,232)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >main</text>
</g>
<g >
<title>kfree (1 samples, 1.04%)</title><rect x="526.2" y="37" width="12.3" height="15.0" fill="rgb(108,108,215)" rx="2" ry="2" />
<text  x="529.25" y="47.5" ></text>
</g>
<g >
<title>dictObjectDestructor (1 samples, 1.04%)</title><rect x="809.0" y="469" width="12.2" height="15.0" fill="rgb(88,88,198)" rx="2" ry="2" />
<text  x="811.96" y="479.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (29 samples, 30.21%)</title><rect x="182.1" y="181" width="356.4" height="15.0" fill="rgb(100,100,208)" rx="2" ry="2" />
<text  x="185.08" y="191.5" >ip_protocol_deliver_rcu</text>
</g>
<g >
<title>__get_user_8 (2 samples, 2.08%)</title><rect x="1104.0" y="501" width="24.5" height="15.0" fill="rgb(132,132,238)" rx="2" ry="2" />
<text  x="1106.96" y="511.5" >_..</text>
</g>
<g >
<title>processTimeEvents (3 samples, 3.12%)</title><rect x="1140.8" y="645" width="36.9" height="15.0" fill="rgb(95,95,204)" rx="2" ry="2" />
<text  x="1143.83" y="655.5" >pro..</text>
</g>
<g >
<title>counts_index_for (1 samples, 1.04%)</title><rect x="821.2" y="485" width="12.3" height="15.0" fill="rgb(129,129,235)" rx="2" ry="2" />
<text  x="824.25" y="495.5" ></text>
</g>
<g >
<title>commandProcessed (3 samples, 3.12%)</title><rect x="710.6" y="565" width="36.9" height="15.0" fill="rgb(96,96,205)" rx="2" ry="2" />
<text  x="713.62" y="575.5" >com..</text>
</g>
<g >
<title>do_task_stat (1 samples, 1.04%)</title><rect x="1153.1" y="453" width="12.3" height="15.0" fill="rgb(135,135,241)" rx="2" ry="2" />
<text  x="1156.12" y="463.5" ></text>
</g>
<g >
<title>updateClientMemUsageAndBucket (1 samples, 1.04%)</title><rect x="981.0" y="597" width="12.3" height="15.0" fill="rgb(82,82,192)" rx="2" ry="2" />
<text  x="984.04" y="607.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 1.04%)</title><rect x="132.9" y="453" width="12.3" height="15.0" fill="rgb(135,135,240)" rx="2" ry="2" />
<text  x="135.92" y="463.5" ></text>
</g>
<g >
<title>kmalloc_reserve (1 samples, 1.04%)</title><rect x="600.0" y="357" width="12.3" height="15.0" fill="rgb(130,130,236)" rx="2" ry="2" />
<text  x="603.00" y="367.5" ></text>
</g>
<g >
<title>dictSdsKeyCaseCompare (1 samples, 1.04%)</title><rect x="845.8" y="485" width="12.3" height="15.0" fill="rgb(84,84,194)" rx="2" ry="2" />
<text  x="848.83" y="495.5" ></text>
</g>
<g >
<title>aeApiPoll (3 samples, 3.12%)</title><rect x="34.6" y="645" width="36.9" height="15.0" fill="rgb(114,114,221)" rx="2" ry="2" />
<text  x="37.58" y="655.5" >aeA..</text>
</g>
<g >
<title>createEmbeddedStringObject (4 samples, 4.17%)</title><rect x="870.4" y="549" width="49.2" height="15.0" fill="rgb(116,116,223)" rx="2" ry="2" />
<text  x="873.42" y="559.5" >crea..</text>
</g>
<g >
<title>tcp_v4_rcv (29 samples, 30.21%)</title><rect x="182.1" y="165" width="356.4" height="15.0" fill="rgb(126,126,232)" rx="2" ry="2" />
<text  x="185.08" y="175.5" >tcp_v4_rcv</text>
</g>
<g >
<title>rseq_ip_fixup (3 samples, 3.12%)</title><rect x="1104.0" y="533" width="36.8" height="15.0" fill="rgb(118,118,225)" rx="2" ry="2" />
<text  x="1106.96" y="543.5" >rse..</text>
</g>
<g >
<title>ep_poll (6 samples, 6.25%)</title><rect x="1017.9" y="565" width="73.8" height="15.0" fill="rgb(127,127,233)" rx="2" ry="2" />
<text  x="1020.92" y="575.5" >ep_poll</text>
</g>
<g >
<title>process_backlog (1 samples, 1.04%)</title><rect x="550.8" y="213" width="12.3" height="15.0" fill="rgb(111,111,218)" rx="2" ry="2" />
<text  x="553.83" y="223.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (2 samples, 2.08%)</title><rect x="1030.2" y="533" width="24.6" height="15.0" fill="rgb(83,83,193)" rx="2" ry="2" />
<text  x="1033.21" y="543.5" >e..</text>
</g>
<g >
<title>je_malloc_usable_size (2 samples, 2.08%)</title><rect x="96.0" y="565" width="24.6" height="15.0" fill="rgb(112,112,220)" rx="2" ry="2" />
<text  x="99.04" y="575.5" >j..</text>
</g>
<g >
<title>_writeToClient (41 samples, 42.71%)</title><rect x="120.6" y="581" width="504.0" height="15.0" fill="rgb(114,114,221)" rx="2" ry="2" />
<text  x="123.62" y="591.5" >_writeToClient</text>
</g>
<g >
<title>sock_poll (2 samples, 2.08%)</title><rect x="1030.2" y="517" width="24.6" height="15.0" fill="rgb(109,109,217)" rx="2" ry="2" />
<text  x="1033.21" y="527.5" >s..</text>
</g>
<g >
<title>rseq_ip_fixup (1 samples, 1.04%)</title><rect x="1128.5" y="517" width="12.3" height="15.0" fill="rgb(118,118,225)" rx="2" ry="2" />
<text  x="1131.54" y="527.5" ></text>
</g>
<g >
<title>kvm_clock_get_cycles (1 samples, 1.04%)</title><rect x="538.5" y="165" width="12.3" height="15.0" fill="rgb(92,92,201)" rx="2" ry="2" />
<text  x="541.54" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 1.04%)</title><rect x="1140.8" y="613" width="12.3" height="15.0" fill="rgb(86,86,195)" rx="2" ry="2" />
<text  x="1143.83" y="623.5" ></text>
</g>
<g >
<title>readQueryFromClient (30 samples, 31.25%)</title><rect x="624.6" y="613" width="368.7" height="15.0" fill="rgb(99,99,208)" rx="2" ry="2" />
<text  x="627.58" y="623.5" >readQueryFromClient</text>
</g>
<g >
<title>zmalloc (1 samples, 1.04%)</title><rect x="931.9" y="565" width="12.3" height="15.0" fill="rgb(125,125,231)" rx="2" ry="2" />
<text  x="934.88" y="575.5" ></text>
</g>
<g >
<title>zfree (2 samples, 2.08%)</title><rect x="722.9" y="517" width="24.6" height="15.0" fill="rgb(104,104,212)" rx="2" ry="2" />
<text  x="725.92" y="527.5" >z..</text>
</g>
<g >
<title>proc_single_show (1 samples, 1.04%)</title><rect x="1153.1" y="469" width="12.3" height="15.0" fill="rgb(108,108,215)" rx="2" ry="2" />
<text  x="1156.12" y="479.5" ></text>
</g>
<g >
<title>ip_finish_output2 (32 samples, 33.33%)</title><rect x="169.8" y="325" width="393.3" height="15.0" fill="rgb(105,105,213)" rx="2" ry="2" />
<text  x="172.79" y="335.5" >ip_finish_output2</text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 1.04%)</title><rect x="1054.8" y="501" width="12.3" height="15.0" fill="rgb(137,137,242)" rx="2" ry="2" />
<text  x="1057.79" y="511.5" ></text>
</g>
<g >
<title>processMultibulkBuffer (6 samples, 6.25%)</title><rect x="870.4" y="581" width="73.8" height="15.0" fill="rgb(90,90,199)" rx="2" ry="2" />
<text  x="873.42" y="591.5" >processM..</text>
</g>
<g >
<title>connSocketEventHandler (1 samples, 1.04%)</title><rect x="1177.7" y="661" width="12.3" height="15.0" fill="rgb(127,127,233)" rx="2" ry="2" />
<text  x="1180.71" y="671.5" ></text>
</g>
<g >
<title>je_malloc (1 samples, 1.04%)</title><rect x="882.7" y="501" width="12.3" height="15.0" fill="rgb(110,110,217)" rx="2" ry="2" />
<text  x="885.71" y="511.5" ></text>
</g>
<g >
<title>tcp_write_xmit (35 samples, 36.46%)</title><rect x="169.8" y="373" width="430.2" height="15.0" fill="rgb(119,119,226)" rx="2" ry="2" />
<text  x="172.79" y="383.5" >tcp_write_xmit</text>
</g>
<g >
<title>__kfree_skb (1 samples, 1.04%)</title><rect x="636.9" y="421" width="12.3" height="15.0" fill="rgb(98,98,206)" rx="2" ry="2" />
<text  x="639.88" y="431.5" ></text>
</g>
<g >
<title>all (96 samples, 100%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(90,90,199)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>vfs_write (40 samples, 41.67%)</title><rect x="132.9" y="485" width="491.7" height="15.0" fill="rgb(82,82,192)" rx="2" ry="2" />
<text  x="135.92" y="495.5" >vfs_write</text>
</g>
<g >
<title>loopback_xmit (1 samples, 1.04%)</title><rect x="169.8" y="277" width="12.3" height="15.0" fill="rgb(138,138,243)" rx="2" ry="2" />
<text  x="172.79" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.04%)</title><rect x="1153.1" y="565" width="12.3" height="15.0" fill="rgb(104,104,212)" rx="2" ry="2" />
<text  x="1156.12" y="575.5" ></text>
</g>
<g >
<title>je_free (1 samples, 1.04%)</title><rect x="83.8" y="565" width="12.2" height="15.0" fill="rgb(88,88,198)" rx="2" ry="2" />
<text  x="86.75" y="575.5" ></text>
</g>
<g >
<title>hdr_record_values (1 samples, 1.04%)</title><rect x="821.2" y="501" width="12.3" height="15.0" fill="rgb(93,93,202)" rx="2" ry="2" />
<text  x="824.25" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 3.12%)</title><rect x="636.9" y="549" width="36.9" height="15.0" fill="rgb(93,93,202)" rx="2" ry="2" />
<text  x="639.88" y="559.5" >do_..</text>
</g>
<g >
<title>avc_lookup (1 samples, 1.04%)</title><rect x="612.3" y="421" width="12.3" height="15.0" fill="rgb(104,104,212)" rx="2" ry="2" />
<text  x="615.29" y="431.5" ></text>
</g>
<g >
<title>sdslen (2 samples, 2.08%)</title><rect x="956.5" y="597" width="24.5" height="15.0" fill="rgb(99,99,207)" rx="2" ry="2" />
<text  x="959.46" y="607.5" >s..</text>
</g>
<g >
<title>handleClientsWithPendingWrites (44 samples, 45.83%)</title><rect x="83.8" y="613" width="540.8" height="15.0" fill="rgb(111,111,219)" rx="2" ry="2" />
<text  x="86.75" y="623.5" >handleClientsWithPendingWrites</text>
</g>
<g >
<title>tcp_event_new_data_sent (1 samples, 1.04%)</title><rect x="575.4" y="357" width="12.3" height="15.0" fill="rgb(122,122,228)" rx="2" ry="2" />
<text  x="578.42" y="367.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 1.04%)</title><rect x="145.2" y="373" width="12.3" height="15.0" fill="rgb(130,130,235)" rx="2" ry="2" />
<text  x="148.21" y="383.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (32 samples, 33.33%)</title><rect x="169.8" y="341" width="393.3" height="15.0" fill="rgb(86,86,195)" rx="2" ry="2" />
<text  x="172.79" y="351.5" >__ip_queue_xmit</text>
</g>
<g >
<title>tcp_recvmsg_locked (3 samples, 3.12%)</title><rect x="636.9" y="437" width="36.9" height="15.0" fill="rgb(113,113,221)" rx="2" ry="2" />
<text  x="639.88" y="447.5" >tcp..</text>
</g>
<g >
<title>setGenericCommand (3 samples, 3.12%)</title><rect x="784.4" y="517" width="36.8" height="15.0" fill="rgb(133,133,238)" rx="2" ry="2" />
<text  x="787.38" y="527.5" >set..</text>
</g>
<g >
<title>tcp_cleanup_rbuf (1 samples, 1.04%)</title><rect x="649.2" y="405" width="12.3" height="15.0" fill="rgb(121,121,228)" rx="2" ry="2" />
<text  x="652.17" y="415.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 1.04%)</title><rect x="538.5" y="181" width="12.3" height="15.0" fill="rgb(120,120,227)" rx="2" ry="2" />
<text  x="541.54" y="191.5" ></text>
</g>
<g >
<title>ztrymalloc_usable_internal (4 samples, 4.17%)</title><rect x="870.4" y="517" width="49.2" height="15.0" fill="rgb(107,107,214)" rx="2" ry="2" />
<text  x="873.42" y="527.5" >ztry..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (3 samples, 3.12%)</title><rect x="1104.0" y="597" width="36.8" height="15.0" fill="rgb(83,83,192)" rx="2" ry="2" />
<text  x="1106.96" y="607.5" >sys..</text>
</g>
<g >
<title>je_free (1 samples, 1.04%)</title><rect x="809.0" y="421" width="12.2" height="15.0" fill="rgb(88,88,198)" rx="2" ry="2" />
<text  x="811.96" y="431.5" ></text>
</g>
<g >
<title>zfree (3 samples, 3.12%)</title><rect x="83.8" y="581" width="36.8" height="15.0" fill="rgb(104,104,212)" rx="2" ry="2" />
<text  x="86.75" y="591.5" >zfree</text>
</g>
<g >
<title>connWrite (41 samples, 42.71%)</title><rect x="120.6" y="565" width="504.0" height="15.0" fill="rgb(82,82,192)" rx="2" ry="2" />
<text  x="123.62" y="575.5" >connWrite</text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 1.04%)</title><rect x="600.0" y="341" width="12.3" height="15.0" fill="rgb(83,83,193)" rx="2" ry="2" />
<text  x="603.00" y="351.5" ></text>
</g>
<g >
<title>avc_has_perm (1 samples, 1.04%)</title><rect x="612.3" y="437" width="12.3" height="15.0" fill="rgb(81,81,191)" rx="2" ry="2" />
<text  x="615.29" y="447.5" ></text>
</g>
<g >
<title>pvclock_clocksource_read (1 samples, 1.04%)</title><rect x="1091.7" y="533" width="12.3" height="15.0" fill="rgb(111,111,218)" rx="2" ry="2" />
<text  x="1094.67" y="543.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 1.04%)</title><rect x="169.8" y="245" width="12.3" height="15.0" fill="rgb(129,129,235)" rx="2" ry="2" />
<text  x="172.79" y="255.5" ></text>
</g>
<g >
<title>ep_done_scan (1 samples, 1.04%)</title><rect x="1017.9" y="533" width="12.3" height="15.0" fill="rgb(99,99,207)" rx="2" ry="2" />
<text  x="1020.92" y="543.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 1.04%)</title><rect x="587.7" y="341" width="12.3" height="15.0" fill="rgb(87,87,196)" rx="2" ry="2" />
<text  x="590.71" y="351.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 1.04%)</title><rect x="1153.1" y="485" width="12.3" height="15.0" fill="rgb(121,121,227)" rx="2" ry="2" />
<text  x="1156.12" y="495.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 1.04%)</title><rect x="636.9" y="373" width="12.3" height="15.0" fill="rgb(82,82,192)" rx="2" ry="2" />
<text  x="639.88" y="383.5" ></text>
</g>
<g >
<title>processCommandAndResetClient (13 samples, 13.54%)</title><rect x="710.6" y="581" width="159.8" height="15.0" fill="rgb(125,125,231)" rx="2" ry="2" />
<text  x="713.62" y="591.5" >processCommandAndRes..</text>
</g>
<g >
<title>freeClientArgv (3 samples, 3.12%)</title><rect x="710.6" y="533" width="36.9" height="15.0" fill="rgb(83,83,193)" rx="2" ry="2" />
<text  x="713.62" y="543.5" >fre..</text>
</g>
<g >
<title>ktime_get_ts64 (1 samples, 1.04%)</title><rect x="1079.4" y="533" width="12.3" height="15.0" fill="rgb(101,101,209)" rx="2" ry="2" />
<text  x="1082.38" y="543.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (1 samples, 1.04%)</title><rect x="587.7" y="357" width="12.3" height="15.0" fill="rgb(139,139,244)" rx="2" ry="2" />
<text  x="590.71" y="367.5" ></text>
</g>
<g >
<title>prepareClientToWrite (1 samples, 1.04%)</title><rect x="796.7" y="485" width="12.3" height="15.0" fill="rgb(137,137,242)" rx="2" ry="2" />
<text  x="799.67" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 2.08%)</title><rect x="1054.8" y="549" width="24.6" height="15.0" fill="rgb(109,109,216)" rx="2" ry="2" />
<text  x="1057.79" y="559.5" >s..</text>
</g>
<g >
<title>ztrymalloc_usable_internal (1 samples, 1.04%)</title><rect x="931.9" y="549" width="12.3" height="15.0" fill="rgb(107,107,214)" rx="2" ry="2" />
<text  x="934.88" y="559.5" ></text>
</g>
<g >
<title>moduleCallCommandFilters (1 samples, 1.04%)</title><rect x="747.5" y="565" width="12.3" height="15.0" fill="rgb(116,116,223)" rx="2" ry="2" />
<text  x="750.50" y="575.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 1.04%)</title><rect x="501.7" y="101" width="12.3" height="15.0" fill="rgb(102,102,210)" rx="2" ry="2" />
<text  x="504.67" y="111.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 1.04%)</title><rect x="575.4" y="341" width="12.3" height="15.0" fill="rgb(134,134,239)" rx="2" ry="2" />
<text  x="578.42" y="351.5" ></text>
</g>
<g >
<title>zfree (1 samples, 1.04%)</title><rect x="710.6" y="501" width="12.3" height="15.0" fill="rgb(104,104,212)" rx="2" ry="2" />
<text  x="713.62" y="511.5" ></text>
</g>
<g >
<title>zmalloc (4 samples, 4.17%)</title><rect x="870.4" y="533" width="49.2" height="15.0" fill="rgb(125,125,231)" rx="2" ry="2" />
<text  x="873.42" y="543.5" >zmal..</text>
</g>
<g >
<title>__kfree_skb (1 samples, 1.04%)</title><rect x="526.2" y="85" width="12.3" height="15.0" fill="rgb(98,98,206)" rx="2" ry="2" />
<text  x="529.25" y="95.5" ></text>
</g>
<g >
<title>tcp_poll (2 samples, 2.08%)</title><rect x="1030.2" y="485" width="24.6" height="15.0" fill="rgb(83,83,193)" rx="2" ry="2" />
<text  x="1033.21" y="495.5" >t..</text>
</g>
<g >
<title>__localtime_r (1 samples, 1.04%)</title><rect x="1165.4" y="597" width="12.3" height="15.0" fill="rgb(101,101,210)" rx="2" ry="2" />
<text  x="1168.42" y="607.5" ></text>
</g>
<g >
<title>__libc_start_call_main (96 samples, 100.00%)</title><rect x="10.0" y="709" width="1180.0" height="15.0" fill="rgb(87,87,196)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >__libc_start_call_main</text>
</g>
<g >
<title>tcp_poll (2 samples, 2.08%)</title><rect x="1030.2" y="501" width="24.6" height="15.0" fill="rgb(83,83,193)" rx="2" ry="2" />
<text  x="1033.21" y="511.5" >t..</text>
</g>
<g >
<title>connSocketEventHandler (30 samples, 31.25%)</title><rect x="624.6" y="645" width="368.7" height="15.0" fill="rgb(127,127,233)" rx="2" ry="2" />
<text  x="627.58" y="655.5" >connSocketEventHandler</text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 1.04%)</title><rect x="575.4" y="325" width="12.3" height="15.0" fill="rgb(134,134,239)" rx="2" ry="2" />
<text  x="578.42" y="335.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (1 samples, 1.04%)</title><rect x="526.2" y="101" width="12.3" height="15.0" fill="rgb(95,95,204)" rx="2" ry="2" />
<text  x="529.25" y="111.5" ></text>
</g>
<g >
<title>processCommand (9 samples, 9.38%)</title><rect x="759.8" y="565" width="110.6" height="15.0" fill="rgb(95,95,203)" rx="2" ry="2" />
<text  x="762.79" y="575.5" >processCommand</text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 1.04%)</title><rect x="169.8" y="293" width="12.3" height="15.0" fill="rgb(105,105,212)" rx="2" ry="2" />
<text  x="172.79" y="303.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (31 samples, 32.29%)</title><rect x="182.1" y="309" width="381.0" height="15.0" fill="rgb(126,126,232)" rx="2" ry="2" />
<text  x="185.08" y="319.5" >__local_bh_enable_ip</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 1.04%)</title><rect x="120.6" y="501" width="12.3" height="15.0" fill="rgb(93,93,202)" rx="2" ry="2" />
<text  x="123.62" y="511.5" ></text>
</g>
<g >
<title>pvclock_clocksource_read (1 samples, 1.04%)</title><rect x="1091.7" y="549" width="12.3" height="15.0" fill="rgb(111,111,218)" rx="2" ry="2" />
<text  x="1094.67" y="559.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 1.04%)</title><rect x="157.5" y="405" width="12.3" height="15.0" fill="rgb(109,109,217)" rx="2" ry="2" />
<text  x="160.50" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 1.04%)</title><rect x="1153.1" y="437" width="12.3" height="15.0" fill="rgb(115,115,222)" rx="2" ry="2" />
<text  x="1156.12" y="447.5" ></text>
</g>
<g >
<title>dbOverwrite (1 samples, 1.04%)</title><rect x="809.0" y="485" width="12.2" height="15.0" fill="rgb(119,119,226)" rx="2" ry="2" />
<text  x="811.96" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 3.12%)</title><rect x="636.9" y="565" width="36.9" height="15.0" fill="rgb(104,104,212)" rx="2" ry="2" />
<text  x="639.88" y="575.5" >ent..</text>
</g>
<g >
<title>tcp_sendmsg_locked (36 samples, 37.50%)</title><rect x="169.8" y="405" width="442.5" height="15.0" fill="rgb(100,100,208)" rx="2" ry="2" />
<text  x="172.79" y="415.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>tcp_sendmsg (38 samples, 39.58%)</title><rect x="145.2" y="421" width="467.1" height="15.0" fill="rgb(109,109,217)" rx="2" ry="2" />
<text  x="148.21" y="431.5" >tcp_sendmsg</text>
</g>
<g >
<title>schedule (1 samples, 1.04%)</title><rect x="1067.1" y="517" width="12.3" height="15.0" fill="rgb(87,87,197)" rx="2" ry="2" />
<text  x="1070.08" y="527.5" ></text>
</g>
<g >
<title>processInputBuffer (22 samples, 22.92%)</title><rect x="686.0" y="597" width="270.5" height="15.0" fill="rgb(84,84,194)" rx="2" ry="2" />
<text  x="689.04" y="607.5" >processInputBuffer</text>
</g>
<g >
<title>avc_lookup (1 samples, 1.04%)</title><rect x="612.3" y="405" width="12.3" height="15.0" fill="rgb(104,104,212)" rx="2" ry="2" />
<text  x="615.29" y="415.5" ></text>
</g>
<g >
<title>sock_write_iter (38 samples, 39.58%)</title><rect x="145.2" y="453" width="467.1" height="15.0" fill="rgb(134,134,239)" rx="2" ry="2" />
<text  x="148.21" y="463.5" >sock_write_iter</text>
</g>
<g >
<title>exit_to_user_mode_prepare (3 samples, 3.12%)</title><rect x="1104.0" y="581" width="36.8" height="15.0" fill="rgb(116,116,223)" rx="2" ry="2" />
<text  x="1106.96" y="591.5" >exi..</text>
</g>
<g >
<title>__clock_gettime (1 samples, 1.04%)</title><rect x="1140.8" y="629" width="12.3" height="15.0" fill="rgb(117,117,224)" rx="2" ry="2" />
<text  x="1143.83" y="639.5" ></text>
</g>
<g >
<title>setCommand (3 samples, 3.12%)</title><rect x="784.4" y="533" width="36.8" height="15.0" fill="rgb(107,107,214)" rx="2" ry="2" />
<text  x="787.38" y="543.5" >set..</text>
</g>
<g >
<title>skb_release_head_state (1 samples, 1.04%)</title><rect x="636.9" y="405" width="12.3" height="15.0" fill="rgb(114,114,221)" rx="2" ry="2" />
<text  x="639.88" y="415.5" ></text>
</g>
<g >
<title>tcp_ack (2 samples, 2.08%)</title><rect x="514.0" y="117" width="24.5" height="15.0" fill="rgb(117,117,224)" rx="2" ry="2" />
<text  x="516.96" y="127.5" >t..</text>
</g>
<g >
<title>aeProcessEvents (95 samples, 98.96%)</title><rect x="10.0" y="661" width="1167.7" height="15.0" fill="rgb(101,101,210)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >aeProcessEvents</text>
</g>
<g >
<title>__GI___libc_read (3 samples, 3.12%)</title><rect x="636.9" y="581" width="36.9" height="15.0" fill="rgb(123,123,229)" rx="2" ry="2" />
<text  x="639.88" y="591.5" >__G..</text>
</g>
<g >
<title>__wake_up_common_lock (26 samples, 27.08%)</title><rect x="182.1" y="101" width="319.6" height="15.0" fill="rgb(128,128,234)" rx="2" ry="2" />
<text  x="185.08" y="111.5" >__wake_up_common_lock</text>
</g>
<g >
<title>updateCommandLatencyHistogram (1 samples, 1.04%)</title><rect x="821.2" y="533" width="12.3" height="15.0" fill="rgb(112,112,219)" rx="2" ry="2" />
<text  x="824.25" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (1 samples, 1.04%)</title><rect x="993.3" y="581" width="12.3" height="15.0" fill="rgb(89,89,198)" rx="2" ry="2" />
<text  x="996.33" y="591.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 1.04%)</title><rect x="600.0" y="389" width="12.3" height="15.0" fill="rgb(118,118,225)" rx="2" ry="2" />
<text  x="603.00" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_read (1 samples, 1.04%)</title><rect x="1153.1" y="581" width="12.3" height="15.0" fill="rgb(123,123,229)" rx="2" ry="2" />
<text  x="1156.12" y="591.5" ></text>
</g>
<g >
<title>string2ll (1 samples, 1.04%)</title><rect x="919.6" y="565" width="12.3" height="15.0" fill="rgb(88,88,198)" rx="2" ry="2" />
<text  x="922.58" y="575.5" ></text>
</g>
<g >
<title>zmalloc_get_rss (1 samples, 1.04%)</title><rect x="1153.1" y="597" width="12.3" height="15.0" fill="rgb(105,105,213)" rx="2" ry="2" />
<text  x="1156.12" y="607.5" ></text>
</g>
<g >
<title>callHandler (30 samples, 31.25%)</title><rect x="624.6" y="629" width="368.7" height="15.0" fill="rgb(94,94,203)" rx="2" ry="2" />
<text  x="627.58" y="639.5" >callHandler</text>
</g>
<g >
<title>skb_release_data (1 samples, 1.04%)</title><rect x="526.2" y="69" width="12.3" height="15.0" fill="rgb(93,93,202)" rx="2" ry="2" />
<text  x="529.25" y="79.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (1 samples, 1.04%)</title><rect x="661.5" y="421" width="12.3" height="15.0" fill="rgb(113,113,221)" rx="2" ry="2" />
<text  x="664.46" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (26 samples, 27.08%)</title><rect x="182.1" y="85" width="319.6" height="15.0" fill="rgb(115,115,222)" rx="2" ry="2" />
<text  x="185.08" y="95.5" >_raw_spin_unlock_irqrestore</text>
</g>
<g >
<title>scriptIsTimedout (1 samples, 1.04%)</title><rect x="944.2" y="581" width="12.3" height="15.0" fill="rgb(114,114,221)" rx="2" ry="2" />
<text  x="947.17" y="591.5" ></text>
</g>
<g >
<title>do_epoll_wait (7 samples, 7.29%)</title><rect x="1005.6" y="581" width="86.1" height="15.0" fill="rgb(95,95,204)" rx="2" ry="2" />
<text  x="1008.62" y="591.5" >do_epoll_w..</text>
</g>
<g >
<title>tcp_cleanup_rbuf (1 samples, 1.04%)</title><rect x="649.2" y="421" width="12.3" height="15.0" fill="rgb(121,121,228)" rx="2" ry="2" />
<text  x="652.17" y="431.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (33 samples, 34.38%)</title><rect x="169.8" y="357" width="405.6" height="15.0" fill="rgb(119,119,226)" rx="2" ry="2" />
<text  x="172.79" y="367.5" >__tcp_transmit_skb</text>
</g>
<g >
<title>addReply (1 samples, 1.04%)</title><rect x="796.7" y="501" width="12.3" height="15.0" fill="rgb(85,85,195)" rx="2" ry="2" />
<text  x="799.67" y="511.5" ></text>
</g>
<g >
<title>handleClientsWithPendingWritesUsingThreads (45 samples, 46.88%)</title><rect x="71.5" y="629" width="553.1" height="15.0" fill="rgb(93,93,202)" rx="2" ry="2" />
<text  x="74.46" y="639.5" >handleClientsWithPendingWritesUsingThreads</text>
</g>
<g >
<title>dictFind (1 samples, 1.04%)</title><rect x="845.8" y="501" width="12.3" height="15.0" fill="rgb(90,90,199)" rx="2" ry="2" />
<text  x="848.83" y="511.5" ></text>
</g>
<g >
<title>writeToClient (41 samples, 42.71%)</title><rect x="120.6" y="597" width="504.0" height="15.0" fill="rgb(130,130,236)" rx="2" ry="2" />
<text  x="123.62" y="607.5" >writeToClient</text>
</g>
<g >
<title>do_softirq (31 samples, 32.29%)</title><rect x="182.1" y="293" width="381.0" height="15.0" fill="rgb(110,110,217)" rx="2" ry="2" />
<text  x="185.08" y="303.5" >do_softirq</text>
</g>
<g >
<title>dst_release (1 samples, 1.04%)</title><rect x="636.9" y="389" width="12.3" height="15.0" fill="rgb(82,82,192)" rx="2" ry="2" />
<text  x="639.88" y="399.5" ></text>
</g>
<g >
<title>decrRefCount (1 samples, 1.04%)</title><rect x="710.6" y="517" width="12.3" height="15.0" fill="rgb(112,112,220)" rx="2" ry="2" />
<text  x="713.62" y="527.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 1.04%)</title><rect x="1054.8" y="485" width="12.3" height="15.0" fill="rgb(137,137,242)" rx="2" ry="2" />
<text  x="1057.79" y="495.5" ></text>
</g>
<g >
<title>listDelNode (3 samples, 3.12%)</title><rect x="83.8" y="597" width="36.8" height="15.0" fill="rgb(117,117,224)" rx="2" ry="2" />
<text  x="86.75" y="607.5" >lis..</text>
</g>
<g >
<title>process_backlog (31 samples, 32.29%)</title><rect x="182.1" y="229" width="381.0" height="15.0" fill="rgb(111,111,218)" rx="2" ry="2" />
<text  x="185.08" y="239.5" >process_backlog</text>
</g>
<g >
<title>resetClient (3 samples, 3.12%)</title><rect x="710.6" y="549" width="36.9" height="15.0" fill="rgb(84,84,194)" rx="2" ry="2" />
<text  x="713.62" y="559.5" >res..</text>
</g>
<g >
<title>new_sync_write (39 samples, 40.62%)</title><rect x="132.9" y="469" width="479.4" height="15.0" fill="rgb(135,135,240)" rx="2" ry="2" />
<text  x="135.92" y="479.5" >new_sync_write</text>
</g>
<g >
<title>getClientType (1 samples, 1.04%)</title><rect x="796.7" y="469" width="12.3" height="15.0" fill="rgb(103,103,211)" rx="2" ry="2" />
<text  x="799.67" y="479.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (1 samples, 1.04%)</title><rect x="1079.4" y="517" width="12.3" height="15.0" fill="rgb(101,101,209)" rx="2" ry="2" />
<text  x="1082.38" y="527.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (1 samples, 1.04%)</title><rect x="1091.7" y="581" width="12.3" height="15.0" fill="rgb(101,101,209)" rx="2" ry="2" />
<text  x="1094.67" y="591.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 1.04%)</title><rect x="145.2" y="389" width="12.3" height="15.0" fill="rgb(130,130,235)" rx="2" ry="2" />
<text  x="148.21" y="399.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 1.04%)</title><rect x="169.8" y="309" width="12.3" height="15.0" fill="rgb(135,135,240)" rx="2" ry="2" />
<text  x="172.79" y="319.5" ></text>
</g>
<g >
<title>lookupCommandLogic (2 samples, 2.08%)</title><rect x="833.5" y="533" width="24.6" height="15.0" fill="rgb(108,108,216)" rx="2" ry="2" />
<text  x="836.54" y="543.5" >l..</text>
</g>
<g >
<title>aeMain (96 samples, 100.00%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(99,99,208)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >aeMain</text>
</g>
<g >
<title>dictFetchValue (1 samples, 1.04%)</title><rect x="845.8" y="517" width="12.3" height="15.0" fill="rgb(130,130,236)" rx="2" ry="2" />
<text  x="848.83" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (41 samples, 42.71%)</title><rect x="120.6" y="533" width="504.0" height="15.0" fill="rgb(104,104,212)" rx="2" ry="2" />
<text  x="123.62" y="543.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>file_has_perm (1 samples, 1.04%)</title><rect x="612.3" y="453" width="12.3" height="15.0" fill="rgb(131,131,236)" rx="2" ry="2" />
<text  x="615.29" y="463.5" ></text>
</g>
<g >
<title>ACLCheckAllPerm (2 samples, 2.08%)</title><rect x="759.8" y="549" width="24.6" height="15.0" fill="rgb(82,82,192)" rx="2" ry="2" />
<text  x="762.79" y="559.5" >A..</text>
</g>
<g >
<title>__get_user_8 (2 samples, 2.08%)</title><rect x="1104.0" y="485" width="24.5" height="15.0" fill="rgb(132,132,238)" rx="2" ry="2" />
<text  x="1106.96" y="495.5" >_..</text>
</g>
<g >
<title>tcp_v4_do_rcv (29 samples, 30.21%)</title><rect x="182.1" y="149" width="356.4" height="15.0" fill="rgb(94,94,203)" rx="2" ry="2" />
<text  x="185.08" y="159.5" >tcp_v4_do_rcv</text>
</g>
<g >
<title>do_syscall_64 (41 samples, 42.71%)</title><rect x="120.6" y="517" width="504.0" height="15.0" fill="rgb(93,93,202)" rx="2" ry="2" />
<text  x="123.62" y="527.5" >do_syscall_64</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (26 samples, 27.08%)</title><rect x="182.1" y="69" width="319.6" height="15.0" fill="rgb(115,115,222)" rx="2" ry="2" />
<text  x="185.08" y="79.5" >_raw_spin_unlock_irqrestore</text>
</g>
<g >
<title>eth_type_trans (1 samples, 1.04%)</title><rect x="169.8" y="261" width="12.3" height="15.0" fill="rgb(129,129,235)" rx="2" ry="2" />
<text  x="172.79" y="271.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (3 samples, 3.12%)</title><rect x="1104.0" y="565" width="36.8" height="15.0" fill="rgb(111,111,218)" rx="2" ry="2" />
<text  x="1106.96" y="575.5" >exi..</text>
</g>
<g >
<title>__tcp_push_pending_frames (35 samples, 36.46%)</title><rect x="169.8" y="389" width="430.2" height="15.0" fill="rgb(118,118,225)" rx="2" ry="2" />
<text  x="172.79" y="399.5" >__tcp_push_pending_frames</text>
</g>
<g >
<title>security_file_permission (1 samples, 1.04%)</title><rect x="612.3" y="469" width="12.3" height="15.0" fill="rgb(112,112,220)" rx="2" ry="2" />
<text  x="615.29" y="479.5" ></text>
</g>
<g >
<title>kfree (1 samples, 1.04%)</title><rect x="526.2" y="53" width="12.3" height="15.0" fill="rgb(108,108,215)" rx="2" ry="2" />
<text  x="529.25" y="63.5" ></text>
</g>
<g >
<title>tcp_recvmsg (3 samples, 3.12%)</title><rect x="636.9" y="453" width="36.9" height="15.0" fill="rgb(123,123,229)" rx="2" ry="2" />
<text  x="639.88" y="463.5" >tcp..</text>
</g>
<g >
<title>__strchr_avx2 (1 samples, 1.04%)</title><rect x="698.3" y="581" width="12.3" height="15.0" fill="rgb(84,84,194)" rx="2" ry="2" />
<text  x="701.33" y="591.5" ></text>
</g>
<g >
<title>vfs_read (3 samples, 3.12%)</title><rect x="636.9" y="517" width="36.9" height="15.0" fill="rgb(110,110,218)" rx="2" ry="2" />
<text  x="639.88" y="527.5" >vfs..</text>
</g>
<g >
<title>hdr_record_value (1 samples, 1.04%)</title><rect x="821.2" y="517" width="12.3" height="15.0" fill="rgb(85,85,194)" rx="2" ry="2" />
<text  x="824.25" y="527.5" ></text>
</g>
<g >
<title>ep_done_scan (1 samples, 1.04%)</title><rect x="1017.9" y="517" width="12.3" height="15.0" fill="rgb(99,99,207)" rx="2" ry="2" />
<text  x="1020.92" y="527.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 1.04%)</title><rect x="1153.1" y="517" width="12.3" height="15.0" fill="rgb(110,110,218)" rx="2" ry="2" />
<text  x="1156.12" y="527.5" ></text>
</g>
<g >
<title>schedule (2 samples, 2.08%)</title><rect x="1054.8" y="533" width="24.6" height="15.0" fill="rgb(87,87,197)" rx="2" ry="2" />
<text  x="1057.79" y="543.5" >s..</text>
</g>
<g >
<title>serverCron (2 samples, 2.08%)</title><rect x="1153.1" y="629" width="24.6" height="15.0" fill="rgb(114,114,221)" rx="2" ry="2" />
<text  x="1156.12" y="639.5" >s..</text>
</g>
<g >
<title>zfree (1 samples, 1.04%)</title><rect x="809.0" y="437" width="12.2" height="15.0" fill="rgb(104,104,212)" rx="2" ry="2" />
<text  x="811.96" y="447.5" ></text>
</g>
<g >
<title>ksys_write (40 samples, 41.67%)</title><rect x="132.9" y="501" width="491.7" height="15.0" fill="rgb(88,88,198)" rx="2" ry="2" />
<text  x="135.92" y="511.5" >ksys_write</text>
</g>
<g >
<title>slowlogPushCurrentCommand (1 samples, 1.04%)</title><rect x="858.1" y="549" width="12.3" height="15.0" fill="rgb(139,139,244)" rx="2" ry="2" />
<text  x="861.12" y="559.5" ></text>
</g>
<g >
<title>je_free (1 samples, 1.04%)</title><rect x="710.6" y="485" width="12.3" height="15.0" fill="rgb(88,88,198)" rx="2" ry="2" />
<text  x="713.62" y="495.5" ></text>
</g>
<g >
<title>updateCachedTime (1 samples, 1.04%)</title><rect x="1165.4" y="613" width="12.3" height="15.0" fill="rgb(89,89,198)" rx="2" ry="2" />
<text  x="1168.42" y="623.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (1 samples, 1.04%)</title><rect x="1079.4" y="549" width="12.3" height="15.0" fill="rgb(82,82,192)" rx="2" ry="2" />
<text  x="1082.38" y="559.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 1.04%)</title><rect x="600.0" y="325" width="12.3" height="15.0" fill="rgb(83,83,193)" rx="2" ry="2" />
<text  x="603.00" y="335.5" ></text>
</g>
<g >
<title>cronUpdateMemoryStats (1 samples, 1.04%)</title><rect x="1153.1" y="613" width="12.3" height="15.0" fill="rgb(97,97,205)" rx="2" ry="2" />
<text  x="1156.12" y="623.5" ></text>
</g>
</g>
</svg>
